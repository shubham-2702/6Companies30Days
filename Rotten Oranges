 int orangesRotting(vector<vector<int>>& grid) {
        int row=grid.size(),tot=0,min=0,cnt=0;
        int col=grid[0].size();
        queue<pair<int,int>> q;
        for(int i=0;i<row;i++)
        {
            for(int j=0;j<col;j++)
            {
                if(grid[i][j]!=0)
                    tot++;
                if(grid[i][j]==2)
                    q.push({i,j});
            }
        }
        vector<int> dx={-1,1,0,0};
        vector<int> dy={0,0,-1,1};
        while(!q.empty())
        {
            int k=q.size();
            cnt+=k;
            while(k--)
            {
                int x=q.front().first,y=q.front().second;
                q.pop();
                for(int i=0;i<4;i++)
                {
                    int nx=x+dx[i],ny=y+dy[i];
                    if(nx<0 || nx==row || ny<0 ||ny==col ||grid[nx][ny]!=1)
                        continue;
                    grid[nx][ny]=2;
                    q.push({nx,ny});
                }
            }
            if(!q.empty())
                min++;
        }
        return  tot==cnt?min:-1;
    }
